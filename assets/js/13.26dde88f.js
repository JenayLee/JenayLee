(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{180:function(e,l,i){"use strict";i.r(l);var t=i(0),o=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,l=e.$createElement,i=e._self._c||l;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"mvvm"}},[e._v("MVVM")]),e._v(" "),i("p",[e._v("MVVM分为Model、View、ViewModel三者。")]),e._v(" "),i("ul",[i("li",[i("p",[e._v("Model：代表数据模型，数据和业务逻辑都在Model层中定义")])]),e._v(" "),i("li",[i("p",[e._v("View：代表UI视图，负责数据的展示")])]),e._v(" "),i("li",[i("p",[e._v("ViewModel：负责监听Model中数据的改变并且控制视图的更新，处理用户交互操作")])])]),e._v(" "),i("p",[e._v("Model和View并无直接关联，而是通过ViewModel来进行联系的，Model和ViewModel之间有着双向数据绑定的联系。因此当Model中的数据改变时会触发View层的刷新，View中由于用户交互操作而改变的数据也会在Model中同步。")]),e._v(" "),i("p",[e._v("这种模式实现了Model和View的数据自动同步，因此开发者只需要专注对数据的维护操作即可，而不需要自己操作dom。")])])}],!1,null,null,null);l.default=o.exports}}]);